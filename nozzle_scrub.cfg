[gcode_macro clean_nozzle]
variable_location_bucket_rear:  True
variable_enable_purge:          True
variable_purge_len:             10          ; Amount of filament, in mm, to purge.
variable_purge_spd:             150	         ; Speed, in mm/min, of the purge.
variable_purge_temp_min:        235	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:             2          ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            2          ; Dwell/wait time, in seconds, after purging and retracting.
variable_brush_top:             2.2
variable_clearance_z:           5	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              3	         ; Number of complete (A complete wipe: left, right, left OR right, left, right) wipes.
variable_prep_spd_xy:           3400	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:            1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:           4000	         ; Nozzle wipe speed in mm/min.
variable_brush_start:           65
variable_brush_width:           40	
variable_brush_front:           0          
variable_brush_depth:           0          
variable_bucket_left_width:     67
variable_bucket_right_width:    40            
variable_bucket_gap:            22	
variable_bucket_start:          0
variable_bucket_pos:            1	        

gcode:
   {% if "xyz" in printer.toolhead.homed_axes %}
      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle
      G90
      ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option or not.
      {% if enable_purge %}
         SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE=1
         G1 X50

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro. Small retract after
         ### purging to minimize any persistent oozing at 5x purge_spd. G4 dwell is in milliseconds, hence * 1000 in formula.
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G1 E-{purge_ret} F{purge_spd * 5}
            G4 P{ooze_dwell * 1000}
            G92 E0   ; reset extruder
         {% endif %}
      {% endif %}
   
      ## Position for wipe. Either left or right of brush based off bucket_pos to avoid unnecessary travel.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}

      ## Check if user chose to use rear location.
      G1 Y{Ry}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + (brush_width * (1 - bucket_pos))} F{wipe_spd_xy}
         G1 X{brush_start + (brush_width * bucket_pos)} F{wipe_spd_xy}
      {% endfor %}
   
      ## Clear from area.
      M118 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      # G1 X{bucket_start + (bucket_left_width / 4)} F{prep_spd_xy} #bugfix for right side mounted buckets

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle
   {% else %}
      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M118 Please home first!
   {% endif %}
